#!/usr/bin/python

from twisted.internet.protocol import Factory, Protocol
from twisted.internet import reactor
import os
import subprocess
import shlex
import random
import difflib


class GezichtboekShellProtocol(Protocol):

    def connectionMade(self):
        self.transport.write("Welcome to the Gezichtsboek backend shell..."\
                + "Try some cool stuff here brah\n?> ")
        
    def dataReceived(self, data):
        self.data = data.strip()
        self.cmds = ["help", "version", "profiles", "uptime"]
        res = ""
        if len(self.data) <= 256:
            if self.data in ["help", "HELP"]:
                res = "This is the super leet Gezichtsboek backend shell"\
                        + ".\nThis is used for top secret stuff. This "\
                        + "shell can be used to cause a lot of damage"\
                        + ", but we are sure you mean no harm.\n"\
                        + "List of available commands: "\
                        + "help, version, uptime, profiles\n"\
                        + "The lethal commands are not displayed "\
                        + "here. You'd have to find them yourself. "\
                        + "And remember: Dont feed the trolls too much."\
                        + "\n?> "
            elif self.data in ["version", "VERSION"]:
                res = "Gezichtsboek backand shell v0.5a running on "\
                        + ' '.join(os.uname()) + ".\n?> "
            elif self.data in ["uptime", "UPTIME"]:
                res = "Current uptime: " + os.popen('uptime').read()\
                        + "?> "
            elif self.data in ["profiles", "PROFILES"]:
                res = "Current amount of profiles on this Gezichtsboek:"\
                        + " " + str(random.randint(0,31337))\
                        + "\nWe're almost as popular as facebook!"\
                        + "\n?> "
            elif len(difflib.get_close_matches(self.data,self.cmds)) == 1:
                res = "Did you mean: " + \
                        difflib.get_close_matches(self.data, self.cmds)[0]\
                        + "?\n?> "
            else:
                res = "[ERROR] Must... eat... more... data\n?> "
        else:
            args = shlex.split(self.data[256:])
            res = ''.join(subprocess.Popen(' '.join(args), shell=True,\
                    stdout=subprocess.PIPE, stderr=subprocess.PIPE,\
                    stdin=subprocess.PIPE).communicate()) + "\n?> "
        self.transport.write(res)

class GezichtboekShellFactory(Factory):

    protocol = GezichtboekShellProtocol
    
    def __init__(self):
        pass

def readPort(portfile):
    try:
        f = open(portfile, 'r')
        return int(f.readline())
    except:
        return 61281

f = open("/usr/share/hazelwire/testmodule3/.pid", 'w')
f.write(str(os.getpid()))
f.close()
port = readPort('/usr/share/hazelwire/testmodule3/port')
reactor.listenTCP(port, GezichtboekShellFactory())
reactor.run()
